/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import model.User;
import util.DatabaseConnector;

/**
 *
 * @author HP PC
 */

public class CreatePanel extends javax.swing.JPanel {

    /**
     * Creates new form CreatePanel
     */
    JPanel bottomPanel;
    public CreatePanel() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ageTextField = new javax.swing.JTextField();
        nameTextField = new javax.swing.JTextField();
        userFormLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        ageLabel = new javax.swing.JLabel();
        submitButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(153, 153, 255));
        setPreferredSize(new java.awt.Dimension(500, 500));

        userFormLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        userFormLabel.setText("USER FORM");

        nameLabel.setText("Name:");

        ageLabel.setText("Age:");

        submitButton.setText("SUBMIT");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(187, 187, 187)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(userFormLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameLabel)
                            .addComponent(ageLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(submitButton))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(userFormLabel)
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameLabel))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ageLabel))
                .addGap(57, 57, 57)
                .addComponent(submitButton)
                .addContainerGap(201, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        // TODO add your handling code here:
        User newUser = new User();
        boolean validInput = true;
        try
        {
            
            if(!isValidName(nameTextField.getText()))
            {
                validInput = false;
                JOptionPane.showMessageDialog(this, "Invalid input for Name. Please update and resubmit."  );
            }
            if(!isValidAge(Integer.parseInt(ageTextField.getText())))
            {
                validInput = false;
                JOptionPane.showMessageDialog(this, "Invalid Age. Please update and resubmit."  );
            }
            if (validInput)
            {
                newUser.setAge(Integer.parseInt(ageTextField.getText()));
                newUser.setName(nameTextField.getText());

                DatabaseConnector.addUser(newUser);
                JOptionPane.showMessageDialog(null, "User RegistrationSuccessful","SuccessfulRegistration",JOptionPane.INFORMATION_MESSAGE);
            }
            cleanup();
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_submitButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ageLabel;
    private javax.swing.JTextField ageTextField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JButton submitButton;
    private javax.swing.JLabel userFormLabel;
    // End of variables declaration//GEN-END:variables

/**
 * code to clear the text upon submission
 */
    public void cleanup()
    {
        nameTextField.setText("");
        ageTextField.setText("");
    }
    
    /** 
     * validate name field
     * @param Name
     */
    public static boolean isValidName(String Name) {
        // is null or empty
        if (Name == null || Name.trim().isEmpty()) {
            return false;
        }

        // input length 
        if (Name.length() > 25) {
            return false;
        }

        // input validation using regular expression
        String regex = "^[a-zA-Z]+$"; 
        Pattern ipPattern = Pattern.compile(regex);
        Matcher ipMatcher = ipPattern.matcher(Name);

        return ipMatcher.matches();
    }
    
    /**
     * validate age field
     * @param userAge
     * @return 
     */
        public static boolean isValidAge(int userAge) {
        try
        {
            int maxAge =100;
            int age = userAge;

            if(age < 0 || age > maxAge)
            {
                return false;
            }
            else
            {
                return true;
            }
        }
        catch (NumberFormatException ex) 
        {
            return false;
        }
        
    }
}
